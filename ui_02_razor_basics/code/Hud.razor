
@using Sandbox.UI

@namespace MyGame.UI

@inherits Panel
@implements SomeInterface
@attribute [StyleSheet("/UI/stylesheet.scss")]

<style>
    Hud {
        pointer-events: all;
        width: 100%;
        height: 100%;
    }

    .hello {
        margin: 100px;
        font-size: 32px;
        color: white;
        text-shadow: 2px 2px 10px black;
    }

    .goodbye {
        margin: 100px;
        font-size: 32px;
        color: red;
        text-shadow: 2px 2px 10px black;
    }

    .player-list {
        flex-direction: column;
        font-size: 25px;
        font-weight: 800;
        font-family: Poppins;
        color: white;
        text-shadow: 1px 1px 2px black;
        padding: 20px;
        width: 500px;
    }

    .player-list .row {
        flex-grow: 1;
        padding: 10px;
        background-color: rgba(orange .55);
        border-bottom: 2px solid black;
        margin-bottom: 8px;
        border-radius: 4px;
    }

    .timer {
        position: absolute;
        bottom: 200px;
        left: 50%;
        transform: translate(-50% 0);
        font-size: 48px;
        text-shadow: 0px 0px 20px black;
        color: white;
    }
</style>

<root>
    <panel class="hello" onmousedown="@SomeFunction">
        Hello, Razor.  The value of SomeNumber is: @SomeNumber
    </panel>

    @if(ShowGoodbye)
    {
        <panel class="goodbye">
            Goodbye, Razor.
        </panel>
    }

    <panel class="player-list">
        @foreach(var playerName in GetPlayerNames())
        {
            <PlayerName Name=@playerName />
        }
    </panel>

    <panel class="timer">
        @Sandbox.Time.Now.ToString("0.000")
    </panel>
</root>

@code {
    private int SomeNumber = 32;
    private bool ShowGoodbye = false;

    protected override int BuildHash()
    {
        return Sandbox.Time.Now.GetHashCode();
    }

    private List<string> GetPlayerNames()
    {
        return new List<string>()
        {
            "Alyssa",
            "George",
            "Jack",
            "Billy"
        };
    }

    private void SomeFunction()
    {
        Log.Error("Event is working");
        ShowGoodbye = !ShowGoodbye;
    }

}
